#!/usr/bin/env bash
usage() {
  cat << EOF

Options:
  -h, --help          Display this help and exit.
EOF
}

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  usage
  exit 0
fi

if [ -z "$1" ]; then
  MOUNT_POINT=$(mktemp -d "/tmp/borg-mount.XXX")
else
  MOUNT_POINT="$1"
fi

# Check if the required config variables are defined.
if [ -z "$BORG_REPOSITORY" ]; then
  echo "The BORG_REPOSITORY variable is not defined!"
  exit 1
fi

if [ -z "$BORG_BACKUP_PREFIX" ]; then
  BORG_BACKUP_PREFIX="$USER@$HOSTNAME"
fi

if [ -z "$BORG_PASSPHRASE" ]; then
  read -s -p 'Enter repository password: ' BORG_PASSPHRASE
  echo ''
fi

BACKUP=$(BORG_PASSPHRASE="$BORG_PASSPHRASE" \
  borg list "$BORG_REPOSITORY" \
  --glob-archives "$BORG_BACKUP_PREFIX-*" \
  --format "{archive}{TAB}{TAB}{TAB}{time:%Y-%m-%d %H:%M}{NL}" \
  | fzf \
  --ansi \
  --header 'Select backup to mount:'
)

if [ ! -z "$BACKUP" ]; then
  BACKUP=$(echo "$BACKUP" | awk '{print $1}')
  echo "Mounting $ARCHIVE..."
  BORG_PASSPHRASE="$BORG_PASSPHRASE" \
    borg mount "$BORG_REPOSITORY::$BACKUP" "$MOUNT_POINT"

  echo "Mounted $BACKUP to $MOUNT_POINT"

  read -p "Do you want to start a shell in the mounted directory? [y/N] " option
  if [[ "$option" == "y" || "$option" == "Y" ]]; then

    # Start a zsh shell in the mounted directory.
    zsh -c "cd $MOUNT_POINT && zsh"

    read -p "Do you want to unmount the archive? [Y/n] " option
    if [[ "$option" != "n" && "$option" != "N" ]]; then
      borg umount "$MOUNT_POINT"
      rmdir "$MOUNT_POINT"
      echo "Unmounted $MOUNT_POINT"
    fi
  fi
fi


